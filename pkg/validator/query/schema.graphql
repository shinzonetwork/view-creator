type Block {
    hash: String @index(unique: true)
    number: Int @index
    timestamp: String
    parentHash: String
    difficulty: String
    gasUsed: String
    gasLimit: String
    nonce: String
    miner: String
    size: String
    stateRoot: String
    sha3Uncles: String
    transactionsRoot: String
    receiptsRoot: String
    extraData: String
    # Relationships
    transactions: [Transaction] @relation(name: "block_transactions")
}

type Transaction {
    hash: String @index(unique: true)
    blockHash: String @index
    blockNumber: Int @index
    from: String
    to: String
    value: String
    gasUsed: String
    gasPrice: String
    inputData: String
    nonce: String
    transactionIndex: String
    r: String
    s: String
    v: String
    # Relationships
    block: Block @relation(name: "block_transactions")
    logs: [Log] @relation(name: "transaction_logs")
}

type Log {
    address: String
    topics: [String]
    data: String
    transactionHash: String
    blockHash: String
    blockNumber: Int @index
    transactionIndex: String
    logIndex: String
    removed: String
    # Relationships
    block: Block @index @relation(name: "block_transactions")
    transaction: Transaction @index @relation(name: "transaction_logs")
    events: [Event] @relation(name: "log_events")
}

type Event {
    contractAddress: String
    eventName: String
    parameters: String
    transactionHash: String @index
    blockHash: String
    blockNumber: Int @index
    transactionIndex: String
    logIndex: String
    # Relationships
    log: Log @index @relation(name: "log_events")
}
